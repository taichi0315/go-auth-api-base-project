swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Auth API"
host: "localhost:8080"
tags:
  - name: "auth"
    description: "認証関連API"
  - name: "user"
    description: "ユーザ関連API"
schemes:
  - "http"
paths:
  /auth/signup:
    post:
      tags:
        - "auth"
      summary: "ユーザアカウント認証情報作成API"
      description: "ユーザの認証情報を作成します。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Request Body"
          required: true
          schema:
            $ref: "#/definitions/AuthSignUpRequest"
      responses:
        200:
          "description": "A successful response."
          "schema":
            "$ref": "#/definitions/AuthSignUpResponse"

  /auth/signin:
    post:
      tags:
        - "auth"
      summary: "ユーザーアカウント認証API"
      description: "ユーザーの認証を行いtokenを発行します。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Request Body"
          required: true
          schema:
            $ref: "#/definitions/AuthSignInRequest"
      responses:
        200:
          "description": "A successful response."
          "schema":
            "$ref": "#/definitions/AuthSignInResponse"

  /auth/signout:
    delete:
      tags:
        - "auth"
      summary: "認証ユーザサインアウトAPI"
      description: "認証済ユーザのtokenを削除します。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "token"
          description: "認証トークン"
          required: true
          type: "string"
      responses:
        200:
          "description": "A successful response."

  /users:
    get:
      tags:
        - "user"
      summary: "ユーザ一覧取得API"
      description: "ユーザ一覧を取得します。"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: "token"
          description: "認証トークン"
          required: true
          type: "string"
      responses:
        200:
          "description": "A successful response."
          "schema":
            "$ref": "#/definitions/UserListResponse"
            
definitions:
  AuthSignUpRequest:
    type: "object"
    properties:
      username:
        type: "string"
        description: "ユーザ名"
      email:
        type: "string"
        description: "メールアドレス"
      password:
        type: "string"
        description: "パスワード"
  AuthSignUpResponse:
    type: "object"
    properties:
      username:
        type: "string"
        description: "ユーザ名"
      token:
        type: "string"
        description: "認証トークン"
  AuthSignInRequest:
    type: "object"
    properties:
      email:
        type: "string"
        description: "メールアドレス"
      password:
        type: "string"
        description: "パスワード"
  AuthSignInResponse:
    type: "object"
    properties:
      username:
        type: "string"
        description: "ユーザ名"
      token:
        type: "string"
        description: "認証トークン"
  UserListResponse:
    type: "object"
    properties:
      users:
        type: "array"
        items:
          $ref: "#/definitions/UserGetResponse"
  UserGetResponse:
    type: "object"
    properties:
      username:
        type: "string"
        description: "ユーザ名"
